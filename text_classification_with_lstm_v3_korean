{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"text_classification_with_lstm_v3_korean","provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/nlp/ipynb/text_classification_with_transformer.ipynb","timestamp":1622697288061}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"GM2k21JTS0k7"},"source":["# Text classification with Attention\n","- 비윤리적 문장 탐지 어탠션 모델\n","- 컴퓨터공학종합프로젝트2\n","- 전남대학교 컴퓨터정보통신공학 182571 윤현서"]},{"cell_type":"markdown","metadata":{"id":"CJdMqun-S0lb"},"source":["## 1. 환경설정"]},{"cell_type":"markdown","metadata":{"id":"111qU4uQoLJb"},"source":["### 1-1. 라이브러리"]},{"cell_type":"code","metadata":{"id":"gqUout1vWJAQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1623050208471,"user_tz":-540,"elapsed":3505,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"7093b975-8a62-43a3-ad22-f26bce92fd8c"},"source":["!pip install sentencepiece"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting sentencepiece\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f5/99/e0808cb947ba10f575839c43e8fafc9cc44e4a7a2c8f79c60db48220a577/sentencepiece-0.1.95-cp37-cp37m-manylinux2014_x86_64.whl (1.2MB)\n","\r\u001b[K     |▎                               | 10kB 21.7MB/s eta 0:00:01\r\u001b[K     |▌                               | 20kB 28.6MB/s eta 0:00:01\r\u001b[K     |▉                               | 30kB 32.1MB/s eta 0:00:01\r\u001b[K     |█                               | 40kB 33.3MB/s eta 0:00:01\r\u001b[K     |█▍                              | 51kB 35.3MB/s eta 0:00:01\r\u001b[K     |█▋                              | 61kB 34.8MB/s eta 0:00:01\r\u001b[K     |██                              | 71kB 27.4MB/s eta 0:00:01\r\u001b[K     |██▏                             | 81kB 28.3MB/s eta 0:00:01\r\u001b[K     |██▌                             | 92kB 29.7MB/s eta 0:00:01\r\u001b[K     |██▊                             | 102kB 30.0MB/s eta 0:00:01\r\u001b[K     |███                             | 112kB 30.0MB/s eta 0:00:01\r\u001b[K     |███▎                            | 122kB 30.0MB/s eta 0:00:01\r\u001b[K     |███▌                            | 133kB 30.0MB/s eta 0:00:01\r\u001b[K     |███▉                            | 143kB 30.0MB/s eta 0:00:01\r\u001b[K     |████                            | 153kB 30.0MB/s eta 0:00:01\r\u001b[K     |████▍                           | 163kB 30.0MB/s eta 0:00:01\r\u001b[K     |████▋                           | 174kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████                           | 184kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████▏                          | 194kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 204kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 215kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████                          | 225kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████▎                         | 235kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 245kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 256kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████                         | 266kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████▍                        | 276kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 286kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████                        | 296kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 307kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 317kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████▊                       | 327kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████                       | 337kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████▎                      | 348kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 358kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 368kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████                      | 378kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 389kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████▋                     | 399kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████                     | 409kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 419kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 430kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 440kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████                    | 450kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 460kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 471kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████▉                   | 481kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 491kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 501kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 512kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████▉                  | 522kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████▏                 | 532kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 542kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████▊                 | 552kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 563kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████▎                | 573kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████▌                | 583kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 593kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████                | 604kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 614kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████▋               | 624kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 634kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▏              | 645kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 655kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 665kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 675kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████▎             | 686kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████▌             | 696kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 706kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 716kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 727kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 737kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 747kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▏           | 757kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 768kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 778kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 788kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████▎          | 798kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 808kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 819kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 829kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 839kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▋         | 849kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 860kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 870kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 880kB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████▊        | 890kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 901kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 911kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 921kB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 931kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 942kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 952kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▋      | 962kB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 972kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 983kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 993kB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 1.0MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 1.0MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 1.0MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▌    | 1.0MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 1.0MB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▉   | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▍  | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▏ | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▌ | 1.1MB 30.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 1.2MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 1.2MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 1.2MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▋| 1.2MB 30.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▉| 1.2MB 30.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 1.2MB 30.0MB/s \n","\u001b[?25hInstalling collected packages: sentencepiece\n","Successfully installed sentencepiece-0.1.95\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p4xScYkMS0lc"},"source":["import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from google.colab import drive\n","import sentencepiece as spm\n","import pandas as pd\n","import numpy as np\n","import os\n","import gzip\n","import shutil"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2wkiLC1tolt8"},"source":["### 1-2. 버전 확인"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xwse5_U6okpb","executionInfo":{"status":"ok","timestamp":1623050214736,"user_tz":-540,"elapsed":4762,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"88b324a9-c5f4-489a-9606-2c95c897d4b9"},"source":["print(tf.__version__)\n","print(pd.__version__)\n","print(np.__version__)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2.5.0\n","1.1.5\n","1.19.5\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"DUhZfNSnopqa"},"source":["### 1-3. GPU 확인"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kmH3Bd1lorxc","executionInfo":{"status":"ok","timestamp":1623050215029,"user_tz":-540,"elapsed":11,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"931a570d-3ae9-4920-b1aa-46437a209841"},"source":["gpus = tf.config.experimental.list_physical_devices('GPU')\n","if gpus:\n","  try:\n","    # Currently, memory growth needs to be the same across GPUs\n","    for gpu in gpus:\n","      tf.config.experimental.set_memory_growth(gpu, True)\n","    logical_gpus = tf.config.experimental.list_logical_devices('GPU')\n","    print(len(gpus), \"Physical GPUs,\", len(logical_gpus), \"Logical GPUs\")\n","  except RuntimeError as e:\n","    # Memory growth must be set before GPUs have been initialized\n","    print(e)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1 Physical GPUs, 1 Logical GPUs\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"qDdyUu9zotYj"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HPKE3wH3o_GU"},"source":["## 2. 데이터 전처리"]},{"cell_type":"markdown","metadata":{"id":"oasRQO-IpBNO"},"source":["### 2-1. 데이터 로드"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XRqgMJ4VfWjW","executionInfo":{"status":"ok","timestamp":1623050234897,"user_tz":-540,"elapsed":19876,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"7c2af49e-caed-4cc9-c4b1-057f2b2c1897"},"source":["drive.mount('/content/drive')\n","# data를 저장할 폴더 입니다. 환경에 맞게 수정 하세요.\n","data_dir = \"/content/drive/My Drive/Capstone2/\""],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r2h2fT6jfgV1","executionInfo":{"status":"ok","timestamp":1623050236513,"user_tz":-540,"elapsed":1619,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"e14b4660-8ccf-4102-dd36-75a29c0b913c"},"source":["train = pd.read_csv(data_dir+\"bias_data_train.csv\")\n","test = pd.read_csv(data_dir+\"bias_data_test.csv\")\n","\n","print(train.shape)\n","print(test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(50222, 2)\n","(4974, 2)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"As3ivLjXqRVT"},"source":["### 2-2. 데이터 전처리\n","- 문장 인코딩"]},{"cell_type":"code","metadata":{"id":"Ty009i93pK8s"},"source":["def data_preprocessing(train, test):\n","    vocab_file = f\"{data_dir}/kowiki.model\"\n","    vocab = spm.SentencePieceProcessor()\n","    vocab.load(vocab_file)\n","\n","    '''\n","    # 데이터 인코딩 테스트\n","    lines = [\n","        \"겨울이 되어서 날씨가 무척 추워요.\",\n","        \"이번 성탄절은 화이트 크리스마스가 될까요?\",\n","        \"겨울에 감기 조심하시고 행복한 연말 되세요.\"\n","            ]\n","    for line in lines:\n","    pieces = vocab.encode_as_pieces(line)\n","    ids = vocab.encode_as_ids(line)\n","    print(line)\n","    print(pieces)\n","    print(ids)\n","    print()\n","    '''\n","\n","    x_train = train[\"comments\"]\n","    y_train = train[\"label\"]\n","    x_test = test[\"comments\"]\n","    y_test = test[\"label\"]\n","\n","    for l in range(len(x_train)):\n","        x_train[l] = vocab.encode_as_ids(x_train[l])\n","\n","    for l in range(len(x_test)):\n","        x_test[l] = vocab.encode_as_ids(x_test[l])\n","    \n","    y_train = np.asarray(y_train).astype('float32')\n","    y_test = np.asarray(y_test).astype('float32')\n","\n","    return x_train, y_train, x_test, y_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-c-8P6gxhIw1","executionInfo":{"status":"ok","timestamp":1623050254949,"user_tz":-540,"elapsed":18188,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"d5a0fca1-6a6a-44d0-9cc7-0247832f916d"},"source":["x_train, y_train, x_test, y_test = data_preprocessing(train, test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:28: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:31: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"HM2TASHNrFsd"},"source":["- 문장 패딩"]},{"cell_type":"code","metadata":{"id":"FFrR4Ityq-Ns"},"source":["vocab_size = 20000  # Only consider the top 20k words\n","maxlen = 200  # Only consider the first 200 words of each movie review"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sv0yZDNpq-Yk","executionInfo":{"status":"ok","timestamp":1623050254950,"user_tz":-540,"elapsed":17,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"5f96e59b-208e-4947-a619-ca96127ea3e5"},"source":["print(len(x_train), \"Training sequences\")\n","print(len(x_test), \"Test sequences\")\n","x_train = keras.preprocessing.sequence.pad_sequences(x_train, maxlen=maxlen)\n","x_test = keras.preprocessing.sequence.pad_sequences(x_test, maxlen=maxlen)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["50222 Training sequences\n","4974 Test sequences\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"XkNIWJ6gq1zI"},"source":["## 3. 모델"]},{"cell_type":"markdown","metadata":{"id":"J-wNVBv4S0le"},"source":["### 3-1. LSTM"]},{"cell_type":"markdown","metadata":{"id":"eJGsHA_rS0l7"},"source":["### 3-2. 모델 구현 함수"]},{"cell_type":"code","metadata":{"id":"bzQsvlBarsBM"},"source":["def make_model(maxlen, vocab_size):\n","\n","    embed_dim = 32  # Embedding size for each token\n","\n","    inputs = layers.Input(shape=(maxlen,))\n","    x = layers.Embedding(vocab_size, embed_dim)(inputs)\n","    x = tf.keras.layers.LSTM(64, return_sequences=True)(x)\n","    x = tf.keras.layers.LSTM(64, return_sequences=True)(x)\n","    x = tf.keras.layers.LSTM(64, return_sequences=True)(x)\n","    \n","    x = layers.GlobalAveragePooling1D()(x)\n","    x = layers.Dropout(0.1)(x)\n","    x = layers.Dense(16, activation=\"relu\")(x)\n","    x = layers.Dropout(0.1)(x)\n","    outputs = layers.Dense(2, activation=\"softmax\")(x)\n","    \n","    return keras.Model(inputs=inputs, outputs=outputs)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w7n8UJllstOF"},"source":["### 3-3. 모델 실행 함수"]},{"cell_type":"code","metadata":{"id":"UxnQtEIYroLT"},"source":["def model_run(model, x_train, y_train, checkpoint_path, optimizer=\"adam\"):\n","  epochs = 500\n","  batch_size = 16\n","\n","  callbacks = [\n","    tf.keras.callbacks.ModelCheckpoint(\n","        checkpoint_path, save_weights_only=True, verbose=1, save_best_only=True\n","    ),\n","    tf.keras.callbacks.ReduceLROnPlateau(\n","        monitor=\"val_loss\", factor=0.5, patience=20, min_lr=0.0001, mode='min'\n","    ),\n","    tf.keras.callbacks.EarlyStopping(monitor=\"val_loss\", patience=30, verbose=1),\n","  ]\n","  model.compile(\n","    optimizer=optimizer,\n","    loss=\"sparse_categorical_crossentropy\",\n","    metrics=[\"sparse_categorical_accuracy\"],\n","  )\n","  history = model.fit(\n","    x_train,\n","    y_train,\n","    batch_size=batch_size,\n","    epochs=epochs,\n","    callbacks=callbacks,\n","    validation_split=0.2,\n","    verbose=1,\n","  )"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rZonnT6gS0mC"},"source":["### 3-4. 모델 학습"]},{"cell_type":"code","metadata":{"id":"ZcqTeHWStH17"},"source":["# 모델 저장 경로\n","model_dir = data_dir+\"model_lstm_v3/\"\n","if not os.path.exists(model_dir):\n","    os.mkdir(model_dir)\n","\n","# 체크포인트 파일 저장 경로\n","checkpoint_path = model_dir+\"checkpoints_model_lstm_v3.ckpt\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_cDbiZoBsQlk","executionInfo":{"status":"ok","timestamp":1623050304286,"user_tz":-540,"elapsed":1004,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"afecace5-aba6-4b2b-f7f4-c7dee584c83a"},"source":["model = make_model(maxlen, vocab_size)\n","print(model.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         [(None, 200)]             0         \n","_________________________________________________________________\n","embedding (Embedding)        (None, 200, 32)           640000    \n","_________________________________________________________________\n","lstm (LSTM)                  (None, 200, 64)           24832     \n","_________________________________________________________________\n","lstm_1 (LSTM)                (None, 200, 64)           33024     \n","_________________________________________________________________\n","lstm_2 (LSTM)                (None, 200, 64)           33024     \n","_________________________________________________________________\n","global_average_pooling1d (Gl (None, 64)                0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 64)                0         \n","_________________________________________________________________\n","dense (Dense)                (None, 16)                1040      \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 16)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 2)                 34        \n","=================================================================\n","Total params: 731,954\n","Trainable params: 731,954\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mzZux5_lteba","executionInfo":{"status":"ok","timestamp":1623052624808,"user_tz":-540,"elapsed":2318676,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"994027c9-b9fd-477f-b3ca-a78250e8336c"},"source":["model_run(model, x_train, y_train, checkpoint_path, optimizer=\"adam\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/500\n","2512/2512 [==============================] - 75s 26ms/step - loss: 0.3315 - sparse_categorical_accuracy: 0.8547 - val_loss: 0.3136 - val_sparse_categorical_accuracy: 0.8674\n","\n","Epoch 00001: val_loss improved from inf to 0.31359, saving model to /content/drive/My Drive/Capstone2/model_lstm_v3/checkpoints_model_lstm_v3.ckpt\n","Epoch 2/500\n","2512/2512 [==============================] - 65s 26ms/step - loss: 0.2322 - sparse_categorical_accuracy: 0.9036 - val_loss: 0.2966 - val_sparse_categorical_accuracy: 0.8653\n","\n","Epoch 00002: val_loss improved from 0.31359 to 0.29661, saving model to /content/drive/My Drive/Capstone2/model_lstm_v3/checkpoints_model_lstm_v3.ckpt\n","Epoch 3/500\n","2512/2512 [==============================] - 66s 26ms/step - loss: 0.2020 - sparse_categorical_accuracy: 0.9173 - val_loss: 0.3911 - val_sparse_categorical_accuracy: 0.8463\n","\n","Epoch 00003: val_loss did not improve from 0.29661\n","Epoch 4/500\n","2512/2512 [==============================] - 66s 26ms/step - loss: 0.1809 - sparse_categorical_accuracy: 0.9269 - val_loss: 0.3237 - val_sparse_categorical_accuracy: 0.8642\n","\n","Epoch 00004: val_loss did not improve from 0.29661\n","Epoch 5/500\n","2512/2512 [==============================] - 66s 26ms/step - loss: 0.1645 - sparse_categorical_accuracy: 0.9354 - val_loss: 0.2996 - val_sparse_categorical_accuracy: 0.8734\n","\n","Epoch 00005: val_loss did not improve from 0.29661\n","Epoch 6/500\n","2512/2512 [==============================] - 66s 26ms/step - loss: 0.1481 - sparse_categorical_accuracy: 0.9425 - val_loss: 0.2519 - val_sparse_categorical_accuracy: 0.9066\n","\n","Epoch 00006: val_loss improved from 0.29661 to 0.25189, saving model to /content/drive/My Drive/Capstone2/model_lstm_v3/checkpoints_model_lstm_v3.ckpt\n","Epoch 7/500\n","2512/2512 [==============================] - 66s 26ms/step - loss: 0.1297 - sparse_categorical_accuracy: 0.9498 - val_loss: 0.4799 - val_sparse_categorical_accuracy: 0.8516\n","\n","Epoch 00007: val_loss did not improve from 0.25189\n","Epoch 8/500\n","2512/2512 [==============================] - 66s 26ms/step - loss: 0.1122 - sparse_categorical_accuracy: 0.9578 - val_loss: 0.3830 - val_sparse_categorical_accuracy: 0.8729\n","\n","Epoch 00008: val_loss did not improve from 0.25189\n","Epoch 9/500\n","2512/2512 [==============================] - 65s 26ms/step - loss: 0.0971 - sparse_categorical_accuracy: 0.9649 - val_loss: 0.4459 - val_sparse_categorical_accuracy: 0.8584\n","\n","Epoch 00009: val_loss did not improve from 0.25189\n","Epoch 10/500\n","2512/2512 [==============================] - 64s 26ms/step - loss: 0.0843 - sparse_categorical_accuracy: 0.9699 - val_loss: 0.4959 - val_sparse_categorical_accuracy: 0.8699\n","\n","Epoch 00010: val_loss did not improve from 0.25189\n","Epoch 11/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0732 - sparse_categorical_accuracy: 0.9738 - val_loss: 0.4567 - val_sparse_categorical_accuracy: 0.8668\n","\n","Epoch 00011: val_loss did not improve from 0.25189\n","Epoch 12/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0616 - sparse_categorical_accuracy: 0.9791 - val_loss: 0.7209 - val_sparse_categorical_accuracy: 0.8449\n","\n","Epoch 00012: val_loss did not improve from 0.25189\n","Epoch 13/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0555 - sparse_categorical_accuracy: 0.9807 - val_loss: 0.5471 - val_sparse_categorical_accuracy: 0.8662\n","\n","Epoch 00013: val_loss did not improve from 0.25189\n","Epoch 14/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0485 - sparse_categorical_accuracy: 0.9839 - val_loss: 0.7518 - val_sparse_categorical_accuracy: 0.8610\n","\n","Epoch 00014: val_loss did not improve from 0.25189\n","Epoch 15/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0408 - sparse_categorical_accuracy: 0.9865 - val_loss: 0.7937 - val_sparse_categorical_accuracy: 0.8643\n","\n","Epoch 00015: val_loss did not improve from 0.25189\n","Epoch 16/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0372 - sparse_categorical_accuracy: 0.9880 - val_loss: 0.8390 - val_sparse_categorical_accuracy: 0.8609\n","\n","Epoch 00016: val_loss did not improve from 0.25189\n","Epoch 17/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0322 - sparse_categorical_accuracy: 0.9890 - val_loss: 0.9455 - val_sparse_categorical_accuracy: 0.8543\n","\n","Epoch 00017: val_loss did not improve from 0.25189\n","Epoch 18/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0287 - sparse_categorical_accuracy: 0.9903 - val_loss: 1.0137 - val_sparse_categorical_accuracy: 0.8634\n","\n","Epoch 00018: val_loss did not improve from 0.25189\n","Epoch 19/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0277 - sparse_categorical_accuracy: 0.9907 - val_loss: 0.9603 - val_sparse_categorical_accuracy: 0.8535\n","\n","Epoch 00019: val_loss did not improve from 0.25189\n","Epoch 20/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0231 - sparse_categorical_accuracy: 0.9926 - val_loss: 0.9454 - val_sparse_categorical_accuracy: 0.8565\n","\n","Epoch 00020: val_loss did not improve from 0.25189\n","Epoch 21/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0213 - sparse_categorical_accuracy: 0.9931 - val_loss: 1.1629 - val_sparse_categorical_accuracy: 0.8452\n","\n","Epoch 00021: val_loss did not improve from 0.25189\n","Epoch 22/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0182 - sparse_categorical_accuracy: 0.9941 - val_loss: 0.8435 - val_sparse_categorical_accuracy: 0.8565\n","\n","Epoch 00022: val_loss did not improve from 0.25189\n","Epoch 23/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0171 - sparse_categorical_accuracy: 0.9946 - val_loss: 1.3047 - val_sparse_categorical_accuracy: 0.8539\n","\n","Epoch 00023: val_loss did not improve from 0.25189\n","Epoch 24/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0168 - sparse_categorical_accuracy: 0.9950 - val_loss: 0.9508 - val_sparse_categorical_accuracy: 0.8710\n","\n","Epoch 00024: val_loss did not improve from 0.25189\n","Epoch 25/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0132 - sparse_categorical_accuracy: 0.9958 - val_loss: 1.5957 - val_sparse_categorical_accuracy: 0.8257\n","\n","Epoch 00025: val_loss did not improve from 0.25189\n","Epoch 26/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0132 - sparse_categorical_accuracy: 0.9958 - val_loss: 1.2340 - val_sparse_categorical_accuracy: 0.8624\n","\n","Epoch 00026: val_loss did not improve from 0.25189\n","Epoch 27/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0078 - sparse_categorical_accuracy: 0.9976 - val_loss: 1.6672 - val_sparse_categorical_accuracy: 0.8522\n","\n","Epoch 00027: val_loss did not improve from 0.25189\n","Epoch 28/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0057 - sparse_categorical_accuracy: 0.9985 - val_loss: 1.9045 - val_sparse_categorical_accuracy: 0.8534\n","\n","Epoch 00028: val_loss did not improve from 0.25189\n","Epoch 29/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0053 - sparse_categorical_accuracy: 0.9984 - val_loss: 2.1852 - val_sparse_categorical_accuracy: 0.8451\n","\n","Epoch 00029: val_loss did not improve from 0.25189\n","Epoch 30/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0048 - sparse_categorical_accuracy: 0.9985 - val_loss: 2.0618 - val_sparse_categorical_accuracy: 0.8550\n","\n","Epoch 00030: val_loss did not improve from 0.25189\n","Epoch 31/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0042 - sparse_categorical_accuracy: 0.9987 - val_loss: 1.9237 - val_sparse_categorical_accuracy: 0.8617\n","\n","Epoch 00031: val_loss did not improve from 0.25189\n","Epoch 32/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0038 - sparse_categorical_accuracy: 0.9987 - val_loss: 2.2383 - val_sparse_categorical_accuracy: 0.8464\n","\n","Epoch 00032: val_loss did not improve from 0.25189\n","Epoch 33/500\n","2512/2512 [==============================] - 64s 26ms/step - loss: 0.0032 - sparse_categorical_accuracy: 0.9988 - val_loss: 2.3505 - val_sparse_categorical_accuracy: 0.8527\n","\n","Epoch 00033: val_loss did not improve from 0.25189\n","Epoch 34/500\n","2512/2512 [==============================] - 64s 25ms/step - loss: 0.0033 - sparse_categorical_accuracy: 0.9989 - val_loss: 2.0482 - val_sparse_categorical_accuracy: 0.8635\n","\n","Epoch 00034: val_loss did not improve from 0.25189\n","Epoch 35/500\n","2512/2512 [==============================] - 64s 26ms/step - loss: 0.0034 - sparse_categorical_accuracy: 0.9987 - val_loss: 2.5142 - val_sparse_categorical_accuracy: 0.8513\n","\n","Epoch 00035: val_loss did not improve from 0.25189\n","Epoch 36/500\n","2512/2512 [==============================] - 63s 25ms/step - loss: 0.0025 - sparse_categorical_accuracy: 0.9989 - val_loss: 2.0200 - val_sparse_categorical_accuracy: 0.8678\n","\n","Epoch 00036: val_loss did not improve from 0.25189\n","Epoch 00036: early stopping\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kLSd33Uht2gz"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4TWnsFfHubMG"},"source":["## 4. 성능 평가"]},{"cell_type":"markdown","metadata":{"id":"JZNCS5UdueGz"},"source":["### 4-1. 성능 평가 함수"]},{"cell_type":"code","metadata":{"id":"vTngDIakuiPr"},"source":["def evalution(x_test, y_test, model):\n","\n","  data_pre = model.predict(x_test)\n","  # print(data_pre)\n","\n","  test_loss, test_acc = model.evaluate(x_test, y_test)\n","\n","  print(\"Test accuracy\", test_acc)\n","  print(\"Test loss\", test_loss)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3iLHzEOGvA4G"},"source":["### 4-2. 모델 로드"]},{"cell_type":"code","metadata":{"id":"AsyiYEe9uvNa"},"source":["model = make_model(maxlen, vocab_size)\n","model.load_weights(checkpoint_path)\n","model.compile(\n","    optimizer=\"adam\",\n","    loss=\"sparse_categorical_crossentropy\",\n","    metrics=[\"sparse_categorical_accuracy\"],\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vz6v7oZjvD-S"},"source":["### 4-3. 모델 성능 평가"]},{"cell_type":"code","metadata":{"id":"vJmVFBd4S_wH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1623052630636,"user_tz":-540,"elapsed":5191,"user":{"displayName":"윤현서","photoUrl":"","userId":"07510240751232710113"}},"outputId":"96a56dad-8b40-4e83-ab6e-7ca129bfa0e7"},"source":["evalution(x_test, y_test, model)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["156/156 [==============================] - 3s 10ms/step - loss: 0.1818 - sparse_categorical_accuracy: 0.9270\n","Test accuracy 0.9270204901695251\n","Test loss 0.18182484805583954\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kVSMwOa6jfri"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RmircjxHjxRA"},"source":[""],"execution_count":null,"outputs":[]}]}